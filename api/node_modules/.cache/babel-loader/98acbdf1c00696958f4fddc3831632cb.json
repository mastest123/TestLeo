{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeremy\\\\Desktop\\\\now_test\\\\root\\\\nowtest\\\\src\\\\pages\\\\neuesRezept.js\";\nimport React, { Component } from 'react';\nimport '../components/newDesign.css';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nclass neuesRezeptSeite extends Component {\n  constructor() {\n    super();\n\n    this.rezeptErstellen = () => {\n      console.log(\"titel: \" + this.state.titel);\n      console.log(\"bildpfad: \" + this.state.bildpfad);\n      console.log(\"beschreibung: \" + this.state.beschreibung);\n      const titel = this.state.titel;\n      const bildpfad = this.state.bildpfad;\n      const beschreibung = this.state.beschreibung;\n      const bid = \"1\"; //TODO AUSGETAUSCHT WERDEN\n      // Rezept Datenbank hinzufuegen\n\n      fetch('/api/rezept/', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rezept: {\n            titel,\n            beschreibung,\n            bildpfad,\n            bid\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        const hinzugefuegt = res.hinzugefuegt,\n              error = res.error;\n\n        if (error && !hinzugefuegt) {\n          window.alert(\"Rezept konnte nicht erstellt werden. Versuche es spÃ¤ter nochmal\");\n        }\n      }); // Tags hinzufuegen\n      // TODO\n    };\n\n    this.state = {\n      titel: \"\",\n      bildpfad: \"\",\n      beschreibung: \"\",\n      tags: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"maincontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"boxcarddetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cardcaption cardcaption_add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"textfield\",\n      className: \"titleNewRecipe\",\n      placeholder: \"Titel\",\n      onChange: event => this.setState({\n        titel: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"cardbody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cardpicture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.rezeptErstellen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Rezept erstellen\"), React.createElement(\"input\", {\n      type: \"textfield\",\n      name: \"pictureurl\",\n      placeholder: \"Bild-URL\",\n      autoComplete: \"off\",\n      onChange: event => this.setState({\n        bildpfad: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"detailtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"textfield\",\n      name: \"receiptdescription\",\n      placeholder: \"Beschreibe das Rezept\",\n      autoComplete: \"off\",\n      onChange: event => this.setState({\n        beschreibung: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"cardtagsdetail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"textfield\",\n      name: \"tagedit\",\n      placeholder: \"#Kategorie 1\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"+ Kategorie\")))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default neuesRezeptSeite;","map":{"version":3,"sources":["C:\\Users\\Jeremy\\Desktop\\now_test\\root\\nowtest\\src\\pages\\neuesRezept.js"],"names":["React","Component","Header","Footer","neuesRezeptSeite","constructor","rezeptErstellen","console","log","state","titel","bildpfad","beschreibung","bid","fetch","method","credentials","headers","body","JSON","stringify","rezept","then","res","json","hinzugefuegt","error","window","alert","tags","render","event","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/newDesign.css';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\n\r\nclass neuesRezeptSeite extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            titel:\"\",\r\n            bildpfad:\"\",\r\n            beschreibung:\"\",\r\n            tags:[]\r\n        };\r\n    }\r\n\r\n    rezeptErstellen = () => {\r\n        console.log(\"titel: \" + this.state.titel);\r\n        console.log(\"bildpfad: \" + this.state.bildpfad);\r\n        console.log(\"beschreibung: \" + this.state.beschreibung);\r\n\r\n        const titel = this.state.titel;\r\n        const bildpfad = this.state.bildpfad;\r\n        const beschreibung = this.state.beschreibung;\r\n        const bid = \"1\"; //TODO AUSGETAUSCHT WERDEN\r\n\r\n        // Rezept Datenbank hinzufuegen\r\n        fetch('/api/rezept/',{\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({rezept: {titel, beschreibung, bildpfad, bid}})\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            const {hinzugefuegt, error} = res;\r\n\r\n            if(error && !hinzugefuegt){\r\n                window.alert(\"Rezept konnte nicht erstellt werden. Versuche es spÃ¤ter nochmal\")\r\n            }\r\n        });\r\n\r\n        // Tags hinzufuegen\r\n        // TODO\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div id=\"flex-container\">\r\n                <Header />\r\n\r\n                <main>\r\n                    <div className=\"maincontainer\">\r\n                        <div className=\"boxcarddetail\">\r\n                            <div className=\"cardcaption cardcaption_add\">\r\n                                <input type=\"textfield\" className=\"titleNewRecipe\" placeholder=\"Titel\" onChange={(event) => this.setState({titel: event.target.value})} />\r\n                            </div>\r\n                            <div className=\"cardbody\">\r\n                                <div className=\"cardpicture\">\r\n                                    <button onClick={this.rezeptErstellen}>Rezept erstellen</button>\r\n                                    <input type=\"textfield\" name=\"pictureurl\" placeholder=\"Bild-URL\" autoComplete=\"off\" onChange={(event) => this.setState({bildpfad: event.target.value})} />\r\n                                </div>\r\n                                <div className=\"detailtext\">\r\n                                    <input type=\"textfield\" name=\"receiptdescription\" placeholder=\"Beschreibe das Rezept\" autoComplete=\"off\" onChange={(event) => this.setState({beschreibung: event.target.value})} />\r\n                                </div>\r\n                                <div className=\"cardtagsdetail\">\r\n                                    <p>\r\n                                        <input type=\"textfield\" name=\"tagedit\" placeholder=\"#Kategorie 1\" autoComplete=\"off\" />\r\n                                    </p>\r\n                                    <button>+ Kategorie</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default neuesRezeptSeite;"]},"metadata":{},"sourceType":"module"}